-- MySQL Script generated by MySQL Workbench
-- Wed Nov 14 20:06:31 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bestel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bestel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bestel` DEFAULT CHARACTER SET utf8 ;
USE `bestel` ;

-- -----------------------------------------------------
-- Table `bestel`.`Klant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bestel`.`Klant` ;

CREATE TABLE IF NOT EXISTS `bestel`.`Klant` (
  `id` INT NOT NULL,
  `naam` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bestel`.`Bestelling`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bestel`.`Bestelling` ;

CREATE TABLE IF NOT EXISTS `bestel`.`Bestelling` (
  `id` INT NOT NULL,
  `besteldatum` DATE NOT NULL,
  `klant` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_klant_idx` (`klant` ASC),
  CONSTRAINT `fk_order_klant`
    FOREIGN KEY (`klant`)
    REFERENCES `bestel`.`Klant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bestel`.`Artikelgroep`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bestel`.`Artikelgroep` ;

CREATE TABLE IF NOT EXISTS `bestel`.`Artikelgroep` (
  `groep` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`groep`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bestel`.`Artikel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bestel`.`Artikel` ;

CREATE TABLE IF NOT EXISTS `bestel`.`Artikel` (
  `id` INT NOT NULL,
  `omschrijving` VARCHAR(45) NOT NULL,
  `prijs` FLOAT NOT NULL,
  `artikelgroep` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_artikel_artiklegroep_idx` (`artikelgroep` ASC),
  CONSTRAINT `fk_artikel_artiklegroep`
    FOREIGN KEY (`artikelgroep`)
    REFERENCES `bestel`.`Artikelgroep` (`groep`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bestel`.`Bestelregel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bestel`.`Bestelregel` ;

CREATE TABLE IF NOT EXISTS `bestel`.`Bestelregel` (
  `bestelling` INT NOT NULL,
  `artikel` INT NOT NULL,
  `aantal` INT NOT NULL,
  PRIMARY KEY (`bestelling`, `artikel`),
  INDEX `fk_orderregel_artikel_idx` (`artikel` ASC) ,
  CONSTRAINT `fk_orderregel_bestelling`
    FOREIGN KEY (`bestelling`)
    REFERENCES `bestel`.`Bestelling` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderregel_artikel`
    FOREIGN KEY (`artikel`)
    REFERENCES `bestel`.`Artikel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bestel`.`Klant`
-- -----------------------------------------------------
START TRANSACTION;
USE `bestel`;
INSERT INTO `bestel`.`Klant` (`id`, `naam`) VALUES (11, 'Peters');
INSERT INTO `bestel`.`Klant` (`id`, `naam`) VALUES (22, 'Jansen');
INSERT INTO `bestel`.`Klant` (`id`, `naam`) VALUES (34, 'Meijers');
INSERT INTO `bestel`.`Klant` (`id`, `naam`) VALUES (45, 'Tuuren');
INSERT INTO `bestel`.`Klant` (`id`, `naam`) VALUES (36, 'Groen');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bestel`.`Bestelling`
-- -----------------------------------------------------
START TRANSACTION;
USE `bestel`;
INSERT INTO `bestel`.`Bestelling` (`id`, `besteldatum`, `klant`) VALUES (10, '2018/02/10', 11);
INSERT INTO `bestel`.`Bestelling` (`id`, `besteldatum`, `klant`) VALUES (11, '2018/02/10', 22);
INSERT INTO `bestel`.`Bestelling` (`id`, `besteldatum`, `klant`) VALUES (12, '2018/02/10', 45);
INSERT INTO `bestel`.`Bestelling` (`id`, `besteldatum`, `klant`) VALUES (13, '2018/02/11', 11);
INSERT INTO `bestel`.`Bestelling` (`id`, `besteldatum`, `klant`) VALUES (14, '2018/02/13', 34);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bestel`.`Artikelgroep`
-- -----------------------------------------------------
START TRANSACTION;
USE `bestel`;
INSERT INTO `bestel`.`Artikelgroep` (`groep`) VALUES ('snoep');
INSERT INTO `bestel`.`Artikelgroep` (`groep`) VALUES ('frisdrank');
INSERT INTO `bestel`.`Artikelgroep` (`groep`) VALUES ('bier');
INSERT INTO `bestel`.`Artikelgroep` (`groep`) VALUES ('wijnen');
INSERT INTO `bestel`.`Artikelgroep` (`groep`) VALUES ('snack');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bestel`.`Artikel`
-- -----------------------------------------------------
START TRANSACTION;
USE `bestel`;
INSERT INTO `bestel`.`Artikel` (`id`, `omschrijving`, `prijs`, `artikelgroep`) VALUES (1, 'Cola', 1.50, 'frisdrank');
INSERT INTO `bestel`.`Artikel` (`id`, `omschrijving`, `prijs`, `artikelgroep`) VALUES (2, 'Vega chips', 2, 'snack');
INSERT INTO `bestel`.`Artikel` (`id`, `omschrijving`, `prijs`, `artikelgroep`) VALUES (3, 'krat heiniken', 13, 'bier');
INSERT INTO `bestel`.`Artikel` (`id`, `omschrijving`, `prijs`, `artikelgroep`) VALUES (4, 'dogsbier', 2, 'bier');
INSERT INTO `bestel`.`Artikel` (`id`, `omschrijving`, `prijs`, `artikelgroep`) VALUES (5, 'rode wijn', 8, 'wijnen');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bestel`.`Bestelregel`
-- -----------------------------------------------------
START TRANSACTION;
USE `bestel`;
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (10, 1, 4);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (10, 5, 2);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (11, 3, 10);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (12, 1, 5);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (12, 3, 3);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (12, 4, 4);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (13, 3, 1);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (13, 5, 2);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (14, 1, 3);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (14, 2, 2);
INSERT INTO `bestel`.`Bestelregel` (`bestelling`, `artikel`, `aantal`) VALUES (14, 4, 6);

COMMIT;

